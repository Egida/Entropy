name: Build

on:
  - push


jobs:
  build-Entropy-Backend:
    runs-on: ubuntu-latest

    steps:
    - name: Clone repo
      uses: actions/checkout@v2

    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Grant execute permission for gradlew
      run: cd C2/Backend && chmod +x gradlew

    - name: Build with Gradle
      run: cd C2/Backend && ./gradlew build
    
    - name: Rename compiled jars
      run: rm C2/Backend/build/libs/Backend-1.0.jar && mv C2/Backend/build/libs/Backend-1.0-plain.jar C2/Backend/build/libs/Backend-Dependency-${{ steps.vars.outputs.sha_short }}.jar && mv C2/Backend/build/libs/Backend-1.0-standalone.jar C2/Backend/build/libs/Backend-${{ steps.vars.outputs.sha_short }}.jar
      # run: rm C2/Backend/build/libs/Backend-1.0.jar && 
      #      mv C2/Backend/build/libs/Backend-1.0-plain.jar       C2/Backend/build/libs/Backend-Dependency-${{ steps.vars.outputs.sha_short }}.jar &&
      #      mv C2/Backend/build/libs/Backend-1.0-standalone.jar  C2/Backend/build/libs/Backend-${{ steps.vars.outputs.sha_short }}.jar
    

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Entropy Backend
        path: C2/Backend/build/libs/



  build-Entropy-Frontend:
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-22.04, macos-12, windows-2022]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - name: Clone repo
      uses: actions/checkout@v3
    
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build src directory
      run: cd C2/Frontend && go build -o ./build/Entropy-Frontend-${{ steps.vars.outputs.sha_short }}-${{ matrix.os }} ./src
    
    - name: Windows
      if: ${{ matrix.os == "windows-2022" }}
      run: mv C2/Frontend/build/Entropy-Frontend-${{ steps.vars.outputs.sha_short }}-${{ matrix.os }} C2/Frontend/build/Entropy-Frontend-${{ steps.vars.outputs.sha_short }}-${{ matrix.os }}.exe

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Entropy Frontend
        path: C2/Frontend/build/



  build-BotCS:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    
    - name: Clone repo
      uses: actions/checkout@v3
    
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    - name: Build Linux
      run: cd Bots/Bot-C# && dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained false
    - name: Build Windows
      run: cd Bots/Bot-C# && dotnet publish -r win-x64 -p:PublishSingleFile=true --self-contained false
    - name: Build MacOS
      run: cd Bots/Bot-C# && dotnet publish -r osx-x64 -p:PublishSingleFile=true --self-contained false

    - name: Move executables
      run: cd Bots/Bot-C# && mkdir comp && mv bin/Debug/net6.0/win-x64/publish/Bot-C#.exe ./comp/Bot-C#-${{ steps.vars.outputs.sha_short }}.exe && mv bin/Debug/net6.0/linux-x64/publish/Bot-C# ./comp/Bot-C#-linux-${{ steps.vars.outputs.sha_short }} && mv bin/Debug/net6.0/osx-x64/publish/Bot-C# ./comp/Bot-C#-osx-${{ steps.vars.outputs.sha_short }} && ls ./comp 

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: C#Bot
        path: Bots/Bot-C#/comp/

